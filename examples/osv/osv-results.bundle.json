{"mediaType":"application/vnd.dev.sigstore.bundle.v0.3+json","verificationMaterial":{"certificate":{"rawBytes":"MIICyzCCAlKgAwIBAgIUb7Qer2ar+vHrczfi/c4ltWMZ0NQwCgYIKoZIzj0EAwMwNzEVMBMGA1UEChMMc2lnc3RvcmUuZGV2MR4wHAYDVQQDExVzaWdzdG9yZS1pbnRlcm1lZGlhdGUwHhcNMjUwMzI5MjAzNDU5WhcNMjUwMzI5MjA0NDU5WjAAMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEca/1PFy3+Wxml6iDcYW9sccY6EU61nzOLbfZbpX7zUv991xbLcvWomTZKbUlbRGPJuclzx2pBrmycRAjKG+DW6OCAXEwggFtMA4GA1UdDwEB/wQEAwIHgDATBgNVHSUEDDAKBggrBgEFBQcDAzAdBgNVHQ4EFgQUFVbyUNDnZMJX19BeYjOiFLV1qGQwHwYDVR0jBBgwFoAU39Ppz1YkEZb5qNjpKFWixi4YZD8wIgYDVR0RAQH/BBgwFoEUcHVlcmNvQGNhcmFiaW5lci5kZXYwKQYKKwYBBAGDvzABAQQbaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tMCsGCisGAQQBg78wAQgEHQwbaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tMIGJBgorBgEEAdZ5AgQCBHsEeQB3AHUA3T0wasbHETJjGR4cmWc3AqJKXrjePK3/h4pygC8p7o4AAAGV451tFgAABAMARjBEAiBARvTQYOBBSKhdp/QeGwV2q1IW6w69AYUQjBPdvxCrpwIgW1/u9UGc+J3P0f3zza5uC1qbLPo/vxqThnbi67JtvYUwCgYIKoZIzj0EAwMDZwAwZAIwLckCx/QnSjEipGwbFxNukJSBQcwBo1CFTZChm29YjT5pqJ7DCiTut6+z2j6XcxhKAjAH8v0YEV4cAU80aKk6CSWR/R80qM7GeDw5P1SWPPjaEWkJmBxgM9MmHnybd5ixITo="},"tlogEntries":[{"logIndex":"189801717","logId":{"keyId":"wNI9atQGlz+VWfO6LRygH4QUfY/8W4RFwiT5i5WRgB0="},"kindVersion":{"kind":"dsse","version":"0.0.1"},"integratedTime":"1743280500","inclusionPromise":{"signedEntryTimestamp":"MEUCIQDZiV70zipwCLwMfg8V9IFjufYOfyuCpsZuEUbARlTmzAIgV4/gH/mCiPDHw1tsM5E+ODzynH3rO4UcLmoXgW66wRA="},"inclusionProof":{"logIndex":"67897455","rootHash":"UOPZKuBeAQk2TP8i45/dL9fSSQKJnuHOdjt8kfnESvA=","treeSize":"67897456","hashes":["G3RJwInelT37/cKVDN0bPhRvB9KEcXDRk3crEjxLckY=","CG0UcVQurDOigECFhGtUrV4+ALCv2cCM2xDKNmbcq0I=","3Ecdx8OhyIozCKtFHNOWTDUMiWKNg40sxQZBez3ZeNc=","sums5Xpnmp+2z/FfImHoqNCTk64Od6wU+0yG/FiVmsw=","t5OhvE081YYyWP1JA0+4Rhs6U2UHytpgPkSSvGl0b5k=","nfebjwZGR57KMGm6FAtSDeMOq0XBx2SGbFAVDQ+KOas=","PXu5YU3oveJJCO3nbpje4y6CEz30WpAjRSJgdBJ204Y=","CXK1pDzIIEbDfM1QkVYLPBrrThxQAb8pPs4dbdMXNlw=","tskqdN6i10VNYwTGVREahNQV4r59hQupWpXh2clsFxI=","7v8qPHNDLerpduaMx06eb/MwgoQwczTn/cYGKX/9wZ4="],"checkpoint":{"envelope":"rekor.sigstore.dev - 1193050959916656506\n67897456\nUOPZKuBeAQk2TP8i45/dL9fSSQKJnuHOdjt8kfnESvA=\n\nâ€” rekor.sigstore.dev wNI9ajBGAiEAuXQyg3vNj0sOqAOWDU0dwa/tm2v39miGtrLfIyaRqm8CIQCCfZqVTN6oBtJ2ASyJysbxr7UHNnZLVbMtAWf/MUKOJg==\n"}},"canonicalizedBody":"eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiZHNzZSIsInNwZWMiOnsiZW52ZWxvcGVIYXNoIjp7ImFsZ29yaXRobSI6InNoYTI1NiIsInZhbHVlIjoiN2UwY2Q0N2ViM2JjNTM0MjBiYzA1ZWE4OGFjNjVhNDhjZjg1MjhkNWViMjcxNGY4MjdkMGFjMTAzM2NmMTlmZCJ9LCJwYXlsb2FkSGFzaCI6eyJhbGdvcml0aG0iOiJzaGEyNTYiLCJ2YWx1ZSI6IjQ5OTQzYTYwYzliYTgzMGM4ZDMzYWJmOTlhNGU4NGU4M2NkMzI3OWFkZjkzYWFlMWQzNzQ3YmM2M2ZlZmM1YWIifSwic2lnbmF0dXJlcyI6W3sic2lnbmF0dXJlIjoiTUVVQ0lHbE96amNGSlVrcEMwejh3UFhSdkU0cFJNdFIrRTBSSk1QNmp3VThndHo3QWlFQTRORmJuaTlCV2dTVkIvMTkrQVZ3dm1nWXMrN1pNSDVKUXpRNjByZGc0UnM9IiwidmVyaWZpZXIiOiJMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VONWVrTkRRV3hMWjBGM1NVSkJaMGxWWWpkUlpYSXlZWElyZGtoeVkzcG1hUzlqTkd4MFYwMWFNRTVSZDBObldVbExiMXBKZW1vd1JVRjNUWGNLVG5wRlZrMUNUVWRCTVZWRlEyaE5UV015Ykc1ak0xSjJZMjFWZFZwSFZqSk5ValIzU0VGWlJGWlJVVVJGZUZaNllWZGtlbVJIT1hsYVV6RndZbTVTYkFwamJURnNXa2RzYUdSSFZYZElhR05PVFdwVmQwMTZTVFZOYWtGNlRrUlZOVmRvWTA1TmFsVjNUWHBKTlUxcVFUQk9SRlUxVjJwQlFVMUdhM2RGZDFsSUNrdHZXa2w2YWpCRFFWRlpTVXR2V2tsNmFqQkVRVkZqUkZGblFVVmpZUzh4VUVaNU15dFhlRzFzTm1sRVkxbFhPWE5qWTFrMlJWVTJNVzU2VDB4aVpsb0tZbkJZTjNwVmRqazVNWGhpVEdOMlYyOXRWRnBMWWxWc1lsSkhVRXAxWTJ4NmVESndRbkp0ZVdOU1FXcExSeXRFVnpaUFEwRllSWGRuWjBaMFRVRTBSd3BCTVZWa1JIZEZRaTkzVVVWQmQwbElaMFJCVkVKblRsWklVMVZGUkVSQlMwSm5aM0pDWjBWR1FsRmpSRUY2UVdSQ1owNVdTRkUwUlVablVWVkdWbUo1Q2xWT1JHNWFUVXBZTVRsQ1pWbHFUMmxHVEZZeGNVZFJkMGgzV1VSV1VqQnFRa0puZDBadlFWVXpPVkJ3ZWpGWmEwVmFZalZ4VG1wd1MwWlhhWGhwTkZrS1drUTRkMGxuV1VSV1VqQlNRVkZJTDBKQ1ozZEdiMFZWWTBoV2JHTnRUblpSUjA1b1kyMUdhV0ZYTld4amFUVnJXbGhaZDB0UldVdExkMWxDUWtGSFJBcDJla0ZDUVZGUlltRklVakJqU0UwMlRIazVhRmt5VG5aa1Z6VXdZM2sxYm1JeU9XNWlSMVYxV1RJNWRFMURjMGREYVhOSFFWRlJRbWMzT0hkQlVXZEZDa2hSZDJKaFNGSXdZMGhOTmt4NU9XaFpNazUyWkZjMU1HTjVOVzVpTWpsdVlrZFZkVmt5T1hSTlNVZEtRbWR2Y2tKblJVVkJaRm8xUVdkUlEwSkljMFVLWlZGQ00wRklWVUV6VkRCM1lYTmlTRVZVU21wSFVqUmpiVmRqTTBGeFNrdFljbXBsVUVzekwyZzBjSGxuUXpod04yODBRVUZCUjFZME5URjBSbWRCUVFwQ1FVMUJVbXBDUlVGcFFrRlNkbFJSV1U5Q1FsTkxhR1J3TDFGbFIzZFdNbkV4U1ZjMmR6WTVRVmxWVVdwQ1VHUjJlRU55Y0hkSloxY3hMM1U1VlVkakNpdEtNMUF3WmpONmVtRTFkVU14Y1dKTVVHOHZkbmh4VkdodVltazJOMHAwZGxsVmQwTm5XVWxMYjFwSmVtb3dSVUYzVFVSYWQwRjNXa0ZKZDB4amEwTUtlQzlSYmxOcVJXbHdSM2RpUm5oT2RXdEtVMEpSWTNkQ2J6RkRSbFJhUTJodE1qbFphbFExY0hGS04wUkRhVlIxZERZcmVqSnFObGhqZUdoTFFXcEJTQW80ZGpCWlJWWTBZMEZWT0RCaFMyczJRMU5YVWk5U09EQnhUVGRIWlVSM05WQXhVMWRRVUdwaFJWZHJTbTFDZUdkTk9VMXRTRzU1WW1RMWFYaEpWRzg5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLIn1dfX0="}]},"dsseEnvelope":{"payload":"","payloadType":"application/vnd.in-toto+json","signatures":[{"sig":"MEUCIGlOzjcFJUkpC0z8wPXRvE4pRMtR+E0RJMP6jwU8gtz7AiEA4NFbni9BWgSVB/19+AVwvmgYs+7ZMH5JQzQ60rdg4Rs="}]}}